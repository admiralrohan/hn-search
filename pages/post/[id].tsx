import { GetServerSideProps } from "next";
import Head from "next/head";
import Link from "next/link";
import { BASE_URL } from "../../src/constants";
import { PostDetail } from "../../src/interfaces/post-detail";
import styles from "../../styles/Post.module.css";

interface IPostProps {
  data: PostDetail;
}

function Comment({ comment }: { comment: PostDetail }) {
  return (
    <li key={comment.id}>
      <div className={styles.comment__title}>
        <span dangerouslySetInnerHTML={{ __html: "&#8594;" }} />{" "}
        {comment.author} on {comment.created_at.toString()}
      </div>
      <div dangerouslySetInnerHTML={{ __html: comment.text || "" }} />

      <ol className={styles.comment}>
        {comment.children.map((comment1) => (
          <Comment key={comment1.id} comment={comment1} />
        ))}
      </ol>
    </li>
  );
}

export default function Post({ data: post }: IPostProps) {
  console.log(post);
  const postLink = "/post/" + post.id;

  return (
    <div className={styles.container}>
      <Head>
        <title>HN Search</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <header className={styles.header}>
        <div className={styles.logo}>
          <Link href={"/"}>HN Search</Link>
        </div>
      </header>

      <main className={styles.main}>
        <div className={styles.post__title}>
          <Link href={post.url || "#"} className={styles.post__name}>
            {post.title}
          </Link>{" "}
          {post.url && (
            <Link href={post.url} target="_blank" className={styles.post__url}>
              {post.url}
            </Link>
          )}
        </div>

        <div className={styles.post__subtitle}>
          {/* 180 points by jgrahamc on Oct 1, 2021 | hide | past | favorite | 143 comments */}
          {post.points} points by {post.author} on{" "}
          <Link href={postLink}>{post.created_at.toString()}</Link> |{" "}
          <Link href={postLink}>{post.children.length} comments</Link>
        </div>

        <ol className={[styles.comment, styles.comment__first].join(" ")}>
          {post.children.map((comment) => (
            <Comment key={comment.id} comment={comment} />
          ))}
        </ol>
      </main>
    </div>
  );
}

export const getServerSideProps: GetServerSideProps = async ({ query }) => {
  const { id: objectID } = query;

  let result = await fetch(`${BASE_URL}/v1/items/${objectID}`);
  result = await result.json();

  return {
    props: {
      data: result,
    },
  };
};
